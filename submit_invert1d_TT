#!/bin/bash
#!
#! Example SLURM job script for Peta4-CascadeLake (Cascade Lake CPUs, HDR IB)
#! Last updated: Fri 18 Sep 12:24:48 BST 2020
#!

#!#############################################################
#!#### Modify the options in this section as appropriate ######
#!#############################################################

#! sbatch directives begin here ###############################
#! Name of the job:
#SBATCH -J 1d_inversion
#! Which project should be charged:
#SBATCH -A ACCOUNT 
#SBATCH -p NAME
#! How many whole nodes should be allocated?
#SBATCH --nodes=1
#! How many (MPI) tasks will there be in total? (<= nodes*76)
#! The Icelake nodes have 76 CPUs (cores) each and
#! 3420 MiB of memory per CPU.
#SBATCH --ntasks=8
#! How much wallclock time will be required?
#SBATCH --time=00:45:00
#! What types of email messages do you wish to receive?
#SBATCH --mail-type=ALL
#! Uncomment this to prevent the job from being requeued (e.g. if
#! interrupted by node failure or system downtime):
##SBATCH --no-requeue
#! Array jobs
##SBATCH --array=0-1599
#SBATCH --array=0

#! Output files
#SBATCH --output=LOGSTT/array_out_%a_%A.out
#SBATCH --error=LOGSTT/array_error_%a_%A.err

#! sbatch directives end here (put any additional directives above this line)

#! Notes:
#! Charging is determined by cpu number*walltime.
#! The --ntasks value refers to the number of tasks to be launched by SLURM only. This
#! usually equates to the number of MPI tasks launched. Reduce this from nodes*56 if
#! demanded by memory requirements, or if OMP_NUM_THREADS>1.
#! Each task is allocated 1 CPU by default, and each CPU is allocated 3420 MiB
#! of memory. If this is insufficient, also specify
#! --cpus-per-task and/or --mem (the latter specifies MiB per node).

#! Number of nodes and tasks per node allocated by SLURM (do not change):
numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
#! Modify the settings below to specify the application's environment, location 
#! and launch method:

#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel8/default-icl              # REQUIRED - loads the basic environment
source ~/bayesbay/bin/activate

#! Insert additional module load commands after this line if needed:


BASE=./ # location of the invert_1d_phase.py file

DATADIR=./example/TT/data  # location of the data dir
OUTDIR=./example/TT      # location of the output dir

# Inversion number (i.e. the location id of the pseudo-dipsersion curve)
# num=820    # Assign a specific number
num=$SLURM_ARRAY_TASK_ID   # Use the array task ID to batch submit many inversions

# wavetype="rayleigh"
wavetype="love"


#! Run options for the application:
options="-I $DATADIR/data_num_$num.dat \
         -O $OUTDIR \
         -N $num \
         -W $wavetype \
         -C $numtasks
        "

CMD="python invert_1d_phase.py $options"

workdir=$BASE

###############################################################
### You should not have to change anything below this line ####
###############################################################

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

# if [ "$SLURM_JOB_NODELIST" ]; then
#         #! Create a machine file:
#         export NODEFILE=`generate_pbs_nodefile`
#         cat $NODEFILE | uniq > machine.file.$JOBID
#         echo -e "\nNodes allocated:\n================"
#         echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
# fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

echo -e "Array number $SLURM_ARRAY_TASK_ID"

eval $CMD 
